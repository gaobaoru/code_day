

实现一个栈的逆序，但是只能用递归函数和这个栈本身的pop操作来实现，而不能自己申请另外的数据结构。

给定一个整数数组A即为给定的栈，同时给定它的大小n，请返回逆序后的栈。
测试样例：

[4,3,2,1],4

返回：[1,2,3,4]


class StackReverse {
public:
    vector<int> reverseStack(vector<int> A, int n) {
        // write code here
        stack<int> s;
        vector<int> result(n);
        for(int i = 0; i < n; i++){
            s.push(A[i]);
        }
        reverse(s);
        for(int j = 0; j < n; j++){
            result[n-1-j] = s.top();
            s.pop();
        }
        return result;
    }
private:
    int get(stack<int> &s){
        int value = s.top();
        s.pop();
        if(s.empty())
            return value;
        int tmp = get(s);
        s.push(value);
        return tmp;
    }
    void reverse(stack<int> &s){
        if(s.empty()) return;
        int tmp = get(s);
        reverse(s);
        s.push(tmp);
    }
};
