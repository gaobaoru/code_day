题目描述

输入两颗二叉树A，B，判断B是不是A的子结构。 

/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
		bool result = false;
        if(pRoot1 != nullptr && pRoot2 != nullptr){
            if(pRoot1->val == pRoot2->val)
                result = Does_tree1_has_tree2(pRoot1, pRoot2);
            if(!result)
                result = HasSubtree(pRoot1->left, pRoot2);
            if(!result)
                result = HasSubtree(pRoot1->right, pRoot2);
        }
        return result;
    }
    
    bool Does_tree1_has_tree2(TreeNode *root1, TreeNode *root2){
        if(root2 == nullptr) return true;
        if(root1 == nullptr) return false;
        if(root1->val != root2->val) return false;
        return Does_tree1_has_tree2(root1->left, root2->left) &&
            Does_tree1_has_tree2(root1->right, root2->right);
    }
};
