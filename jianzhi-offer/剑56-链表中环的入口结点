题目描述

一个链表中包含环，请找出该链表的环的入口结点。 


//使用一快一慢指针判断链表是否有环，如果有环计算的环的长度n。
//再用两个指针：一个指针先走n步，然后两个指针同时走，再次相遇的时候就是环的入口节点
/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) :
        val(x), next(NULL) {
    }
};
*/
class Solution {
public:
    ListNode* EntryNodeOfLoop(ListNode* pHead)
    {
		if(pHead == NULL) return NULL;
        ListNode *meetingNode = MeetingNode(pHead);
        if(meetingNode == NULL) return NULL;
        
        int LoopNum = 1;
        ListNode *pNode = meetingNode->next;
        while(pNode != meetingNode){
            pNode = pNode->next;
            LoopNum++;
        }
        
        ListNode *pNode1 = pHead;
        for(int i = 0; i < LoopNum; i++){
            pNode1 = pNode1->next;
        }
        ListNode *pNode2 = pHead;
        while(pNode1 != pNode2){
            pNode1 = pNode1->next;
            pNode2 = pNode2->next;
        }
        return pNode1;
    }
    ListNode* MeetingNode(ListNode* pHead){
        if(pHead == NULL)
            return NULL;
        ListNode *pSlow = pHead->next;
        if(pSlow == NULL) return NULL;
        ListNode *pFast = pSlow->next;
        if(pFast == NULL) return NULL;
        while(pSlow != NULL && pFast != NULL){
            if(pFast == pSlow) return pFast;
            pSlow = pSlow->next;
            pFast = pFast->next;
            if(pFast != NULL)
                pFast = pFast->next;
        }
        return NULL;
    }
};
