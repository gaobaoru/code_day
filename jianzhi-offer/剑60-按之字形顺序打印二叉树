题目描述

请实现一个函数按照之字形打印二叉树，
即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。

////用一个bool记录是从左到右还是从右到左，每一层都翻转一下，递归方法
/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    vector<vector<int> > Print(TreeNode* pRoot) {
        vector<vector<int> > result;
        traverse(pRoot, 1, result, true);
        return result;
    }
    void traverse(TreeNode* root, size_t level, vector<vector<int> > &result, bool left_to_right){
        if(!root) return;
        if(level > result.size())
            result.push_back(vector<int>());
        if(left_to_right)
            result[level-1].push_back(root->val);
        else
            result[level-1].insert(result[level-1].begin(), root->val);
        traverse(root->left, level+1, result, !left_to_right);
        traverse(root->right, level+1, result, !left_to_right);
    }
};
