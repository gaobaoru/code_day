题目描述

统计一个数字在排序数组中出现的次数。 

class Solution {
public:
    int GetNumberOfK(vector<int> data ,int k) {
        int result = 0;
        if(data.empty()) return 0;
        int length = data.size();
        int first  = getFirstK(data, k, 0, length-1);
        int last = getLastK(data, k, 0 ,length-1);
        if(first > -1 && last > -1)
            result = last - first + 1;
        return result;
    }
    int getFirstK(vector<int> data, int k, int start, int end){
    	if(start > end) return -1;
        int mid = (start + end) / 2;
        int midData = data[mid];
        if(midData == k){
            if((mid > 0 && data[mid-1] != k) || (mid == 0))
                return mid;
            else
                end = mid - 1;
        }else if(midData > k){
            end = mid - 1;
        }else{
            start = mid + 1;
        }
        return getFirstK(data, k, start, end);
    }
    int getLastK(vector<int> data, int k, int start, int end){
        if(start > end) return -1;
        int length = data.size();
        int mid = (start + end) / 2;
        int midData = data[mid];
        if(midData == k){
            if((mid < length-1 && data[mid+1] != k) || (mid == length - 1)){
                return mid;
            }else{
                start = mid+1;
            }
        }else if(midData > k){
            end = mid - 1;
        }else{
            start = mid + 1;
        }
        return getLastK(data, k, start, end);
    }
};
