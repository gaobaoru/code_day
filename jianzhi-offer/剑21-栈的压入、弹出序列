题目描述

输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。
例如序列1,2,3,4,5是某栈的压入顺序，序列4，5,3,2,1是该压栈序列对应的一个弹出序列，
但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）

class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        bool Ispossible = false;
        if(!pushV.empty() && !popV.empty()){
            stack<int> s_data;
            auto pushNext = pushV.begin();
            auto popNext = popV.begin();
            while(popNext != popV.end()){
                while(s_data.empty() || s_data.top() != *popNext){
                    if(pushNext == pushV.end()) break;
                    s_data.push(*pushNext);
                    pushNext++;
                }
                if(s_data.top() != *popNext) break;
                s_data.pop();
                popNext++;
            }
            if(s_data.empty() && popNext == popV.end())
                Ispossible = true;
        }
        return Ispossible;
    }
};
